{"name": "test_products_group", "status": "skipped", "statusDetails": {"message": "XFAIL Wait for fix bug\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://test.qa.studio?products_group=sale\" class=\"tab-sale \">...</a> is not clickable at point (789, 748). Other element would receive the click: <div class=\"catalog-toolbar-tabs__content\">...</div>\n  (Session info: chrome=109.0.5414.119)\nStacktrace:\n0   chromedriver                        0x000000010aa3dfa8 chromedriver + 4886440\n1   chromedriver                        0x000000010a9bb643 chromedriver + 4351555\n2   chromedriver                        0x000000010a609b27 chromedriver + 477991\n3   chromedriver                        0x000000010a657a78 chromedriver + 797304\n4   chromedriver                        0x000000010a654e7c chromedriver + 786044\n5   chromedriver                        0x000000010a651a94 chromedriver + 772756\n6   chromedriver                        0x000000010a6505ab chromedriver + 767403\n7   chromedriver                        0x000000010a640d73 chromedriver + 703859\n8   chromedriver                        0x000000010a6745d2 chromedriver + 914898\n9   chromedriver                        0x000000010a6403dd chromedriver + 701405\n10  chromedriver                        0x000000010a67478e chromedriver + 915342\n11  chromedriver                        0x000000010a68f5fe chromedriver + 1025534\n12  chromedriver                        0x000000010a6743a3 chromedriver + 914339\n13  chromedriver                        0x000000010a63e57f chromedriver + 693631\n14  chromedriver                        0x000000010a63fb1e chromedriver + 699166\n15  chromedriver                        0x000000010aa0ab9e chromedriver + 4676510\n16  chromedriver                        0x000000010aa0f91e chromedriver + 4696350\n17  chromedriver                        0x000000010aa1719f chromedriver + 4727199\n18  chromedriver                        0x000000010aa1081a chromedriver + 4700186\n19  chromedriver                        0x000000010a9e3a62 chromedriver + 4516450\n20  chromedriver                        0x000000010aa2f8c8 chromedriver + 4827336\n21  chromedriver                        0x000000010aa2fa45 chromedriver + 4827717\n22  chromedriver                        0x000000010aa457ef chromedriver + 4917231\n23  libsystem_pthread.dylib             0x00007ff806d90259 _pthread_start + 125\n24  libsystem_pthread.dylib             0x00007ff806d8bc7b thread_start + 15", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"21860c1e69bb79d2ae10bc0442c5d8a1\")>\n\n    @pytest.mark.xfail(reason=\"Wait for fix bug\")\n    def test_products_group(browser):\n        \"\"\"\n        Test case TC-2\n        \"\"\"\n        expected_menu = [\n            (\"Все\", \"\", \"[class='tab-all active']\"),\n            (\"Бестселлеры\", \"/?products_group=best_sellers\", \"[class='tab-best_sellers ']\"),\n            (\"Горячие товары\", \"/?products_group=featured\", \"[class='tab-featured ']\"),\n            (\"Новые товары\", \"/?products_group=new\", \"[class='tab-new ']\"),\n            (\"Распродажа товаров\", \"/?products_group=sale\", \"[class='tab-sale ']\")\n        ]\n    \n        browser.get(URL)\n        menu_element = \"[class='catalog-toolbar-tabs__content'] a\"\n        elements = browser.find_elements(by=By.CSS_SELECTOR, value=menu_element)\n        assert len(elements) == len(expected_menu), \"Unexpected number of products group\"\n    \n        for item in expected_menu:\n            element = browser.find_element(by=By.CSS_SELECTOR, value=item[2])\n>           element.click()\n\ntests/test_shop.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nenv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\nenv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py:403: in _execute\n    return self._parent.execute(command, params)\nenv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x109925fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff806d90259 _pthread_start + 125\\\\n24  libsystem_pthread.dylib             0x00007ff806d8bc7b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"https://test.qa.studio?products_group=sale\" class=\"tab-sale \">...</a> is not clickable at point (789, 748). Other element would receive the click: <div class=\"catalog-toolbar-tabs__content\">...</div>\nE         (Session info: chrome=109.0.5414.119)\nE       Stacktrace:\nE       0   chromedriver                        0x000000010aa3dfa8 chromedriver + 4886440\nE       1   chromedriver                        0x000000010a9bb643 chromedriver + 4351555\nE       2   chromedriver                        0x000000010a609b27 chromedriver + 477991\nE       3   chromedriver                        0x000000010a657a78 chromedriver + 797304\nE       4   chromedriver                        0x000000010a654e7c chromedriver + 786044\nE       5   chromedriver                        0x000000010a651a94 chromedriver + 772756\nE       6   chromedriver                        0x000000010a6505ab chromedriver + 767403\nE       7   chromedriver                        0x000000010a640d73 chromedriver + 703859\nE       8   chromedriver                        0x000000010a6745d2 chromedriver + 914898\nE       9   chromedriver                        0x000000010a6403dd chromedriver + 701405\nE       10  chromedriver                        0x000000010a67478e chromedriver + 915342\nE       11  chromedriver                        0x000000010a68f5fe chromedriver + 1025534\nE       12  chromedriver                        0x000000010a6743a3 chromedriver + 914339\nE       13  chromedriver                        0x000000010a63e57f chromedriver + 693631\nE       14  chromedriver                        0x000000010a63fb1e chromedriver + 699166\nE       15  chromedriver                        0x000000010aa0ab9e chromedriver + 4676510\nE       16  chromedriver                        0x000000010aa0f91e chromedriver + 4696350\nE       17  chromedriver                        0x000000010aa1719f chromedriver + 4727199\nE       18  chromedriver                        0x000000010aa1081a chromedriver + 4700186\nE       19  chromedriver                        0x000000010a9e3a62 chromedriver + 4516450\nE       20  chromedriver                        0x000000010aa2f8c8 chromedriver + 4827336\nE       21  chromedriver                        0x000000010aa2fa45 chromedriver + 4827717\nE       22  chromedriver                        0x000000010aa457ef chromedriver + 4917231\nE       23  libsystem_pthread.dylib             0x00007ff806d90259 _pthread_start + 125\nE       24  libsystem_pthread.dylib             0x00007ff806d8bc7b thread_start + 15\n\nenv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException"}, "description": "\n    Test case TC-2\n    ", "start": 1675950854504, "stop": 1675950858474, "uuid": "f45ea8c8-ab79-482a-b13b-120848f64229", "historyId": "09ac6b905e7ac66417c95d86a058a7ca", "testCaseId": "4fdd6adba16e950b161eae73ef4ccb14", "fullName": "tests.test_shop#test_products_group", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(reason='Wait for fix bug')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_shop"}, {"name": "host", "value": "MBP-Anna.lan"}, {"name": "thread", "value": "63850-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_shop"}]}